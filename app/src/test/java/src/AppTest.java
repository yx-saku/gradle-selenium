/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package src;

import static com.codeborne.selenide.Selenide.$;
import static com.codeborne.selenide.Selenide.open;

import java.io.IOException;
import java.io.OutputStream;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.Properties;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import com.codeborne.selenide.Configuration;
import com.codeborne.selenide.logevents.SelenideLogger;

import io.github.bonigarcia.wdm.WebDriverManager;
import io.qameta.allure.Allure;
import io.qameta.allure.selenide.AllureSelenide;
import src.utils.ScreenshotUtils;

class AppTest {
    @BeforeAll
    public static void beforeAll() throws IOException {
        System.getProperties().load(AppTest.class.getClassLoader().getResourceAsStream("config.properties"));

        SelenideLogger.addListener("AllureSelenide", new AllureSelenide());
        switch (Configuration.browser) {
            case "chrome":
                WebDriverManager.chromedriver().setup();
                break;
            case "firefox":
                WebDriverManager.firefoxdriver().setup();
                break;
            case "edge":
                WebDriverManager.edgedriver().setup();
                break;
        }

        Properties properties = new Properties();

        // 環境情報を追加
        properties.setProperty("os.name", System.getProperty("os.name"));
        properties.setProperty("os.version", System.getProperty("os.version"));
        properties.setProperty("java.version", System.getProperty("java.version"));
        properties.setProperty("browser", Configuration.browser);

        // allure-resultsディレクトリにenvironment.propertiesファイルを作成
        try {
            var allureResultsPath = Paths.get(System.getProperty("allure.results.directory"));
            Files.createDirectories(allureResultsPath);
            try (OutputStream outputStream = Files.newOutputStream(allureResultsPath.resolve("environment.properties"),
                    StandardOpenOption.CREATE)) {
                properties.store(outputStream, "Environment properties");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @Test
    void openUrl() throws IOException {
        Allure.epic("スクショ比較テスト");
        String fileName = Configuration.browser + ".png";

        int pattern = 1;
        switch (pattern) {
            case 0:
                // Open Google search page
                open("https://www.google.com");

                ScreenshotUtils.takeScreenshot(fileName);

                // Type "Hello, world!" in the search box and submit
                $("[name=q]")
                        .setValue("Hello, world!!!!!!! " + Configuration.browser + " "
                                + System.getProperty("selenide.browser"))
                        .pressEnter();

                ScreenshotUtils.moveCapture2reference(fileName);
                ScreenshotUtils.takeScreenshot(fileName);

                // Check if search results are displayed
                // $$("#search .g").shouldHave(CollectionCondition.sizeGreaterThan(0));

                ScreenshotUtils.compareScreenshot(fileName);
                break;
            case 1:
                ScreenshotUtils.moveCapture2reference(fileName);
                open("https://www.kansaigaidai.ac.jp/asp/img/pdf/82/7a79c35f7ce0704dec63be82440c8182.pdf");
                ScreenshotUtils.takeScreenshot(fileName);
                ScreenshotUtils.compareScreenshot(fileName);
                break;
        }
    }
}
