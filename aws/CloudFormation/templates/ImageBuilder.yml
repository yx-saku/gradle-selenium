AWSTemplateFormatVersion: "2010-09-09"

Mappings:
    Env:
        "443244910989":
            Name: evl

Resources:
    ECRRepository:
        Type: AWS::ECR::Repository
        Properties:
            RepositoryName: !Sub
            - user-bsdxxxx-${Env}-ecrrepository2
            - { Env: !FindInMap [ Env, !Ref AWS::AccountId, Name ] }
            LifecyclePolicy:
                LifecyclePolicyText: !Rain::Embed ../cf-packages/ImageBuilder/LifecyclePolicyText.json

    ContainerRecipe:
        Type: AWS::ImageBuilder::ContainerRecipe
        UpdateReplacePolicy: Delete
        Properties:
            Name: !Sub
            - user-bsdxxxx-${Env}-ContainerRecipe
            - { Env: !FindInMap [ Env, !Ref AWS::AccountId, Name ] }
            Version: 1.0.1
            ParentImage: !Sub arn:aws:imagebuilder:${AWS::Region}:aws:image/amazon-linux-x86-2/2023.9.23
            ContainerType: DOCKER
            DockerfileTemplateUri: !Rain::S3 ../cf-packages/ImageBuilder/Dockerfile
            TargetRepository:
                RepositoryName: !Ref ECRRepository
                Service: ECR
            Components:
            -   ComponentArn: !Ref CommonComponent
                Parameters:
                -   Name: BucketName
                    Value:
                    - !ImportValue BucketName

    CommonComponent:
        Type: AWS::ImageBuilder::Component
        Properties:
            Name: !Sub
            - user-bsdxxxx-${Env}-CommonComponent
            - { Env: !FindInMap [ Env, !Ref AWS::AccountId, Name ] }
            Version: 1.0.0
            Platform: Linux
            Uri: !Rain::S3 ../cf-packages/ImageBuilder/CommonComponent.yml

    ImageBuilderRole:
        Type: AWS::IAM::Role
        Properties:
            RoleName: !Sub
            - user-bsdxxxx-${Env}-ImageBuilderRole
            - { Env: !FindInMap [ Env, !Ref AWS::AccountId, Name ] }
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                -   Effect: Allow
                    Principal:
                        Service:
                        - ec2.amazonaws.com
                    Action:
                    - sts:AssumeRole
            ManagedPolicyArns:
            - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM

    ImageBuilderInstanceProfile:
        Type: AWS::IAM::InstanceProfile
        Properties:
            Roles:
            - !Ref ImageBuilderRole

    InfrastructureConfiguration:
        Type: AWS::ImageBuilder::InfrastructureConfiguration
        Properties:
            Name: !Sub
            - user-bsdxxxx-${Env}-InfrastructureConfiguration
            - { Env: !FindInMap [ Env, !Ref AWS::AccountId, Name ] }
            InstanceProfileName: !Ref ImageBuilderInstanceProfile
            TerminateInstanceOnFailure: true
            InstanceTypes:
            - t2.micro
            Logging:
                S3Logs:
                    S3BucketName: !ImportValue BucketName
                    S3KeyPrefix: /logs/ImageBuilder/

    ImagePipeline:
        Type: AWS::ImageBuilder::ImagePipeline
        Properties:
            Name: !Sub
            - user-bsdxxxx-${Env}-ImagePipeline
            - { Env: !FindInMap [ Env, !Ref AWS::AccountId, Name ] }
            ContainerRecipeArn: !Ref ContainerRecipe
            InfrastructureConfigurationArn: !Ref InfrastructureConfiguration

Outputs:
    ECRRepositoryArn:
        Value: !GetAtt ECRRepository.Arn
        Export:
            Name: ECRRepositoryArn
    ECRRepositoryUri:
        Value: !GetAtt ECRRepository.RepositoryUri
        Export:
            Name: ECRRepositoryUri